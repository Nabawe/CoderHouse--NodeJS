+ Consigna

+ Mensaje al terminar el server
+ Lambda
+ Handlebars Docs
+ Handlebars-ClientSide
+ Handlebars-ServerSide
+ res.render()
+ Navbar y Cambiar el titulo
+ Direcciones Absolutas
+ HTML Form


+ Encabezado Entrega


+ Consigna
    Cuando dice no ReST se refiere a q no se exponga la API?.

    Y "formato tabla dinámica" estimo q era q se carguen de un objeto y no tipo una pivot table q se puede filtrar, modificar tamaño o ordenar a-z, z-a.
+


+ Mensaje al terminar el server
    Así como solemos poner un mensaje al iniciar el server, como haría para disparar algo al terminarlo? Ctrl C lo termina de forma bruta o le manda la señal de q se cierre? Cualquiera sea el caso como podría estar consiente de eso?
+


+ Lambda
    Q es la letra Lambda uppercase Λ, lowercase λ q veo en algunos lados?
+


+ Handlebars Docs
    No entendi por completo ni su usabilidad:
        HTML Escaping
        Partials

    En especial cual seria su uso, ejemplo lo de Partials lo manejaría desde JavaScript antes q Handlebars, q ventaja tendría usar un Partial? Cache?
+


+ Handlebars-ClientSide
    Quería ver como puedo colocar lo q se conceptualiza como "Views" en archivos separados pero cuando lo estoy usando como cliente, en lo q arme como /05__Templates_Engines/.tests/Handlebars-ClientSide/public/scripts/main.js y lo asigna a la variable content.

    La pregunta en si seria ¿Cómo puedo desde el lado de un script q se ejecuta en el cliente importar archivos q no sean JavaScript o JSON o sea para q me entienda .handlebars?

    Se ve en el choclo de comentarios arriba de todo en main.js lo q intente por más q con lo poco q se me doy cuenta q no tenia sentido. Pero como pregunta me parecía q tenia valor ya q creo q es algo q me podría cruzar con otras cosas.
+


+ Handlebars-ServerSide
    05__Templates_Engines/.tests/Handlebars-ServerSide/

        index.mjs
            import DatosPersonales from './data/DatosPersonales.json' assert { type: "json" };
            import Products from './data/products.json' assert { type: "json" };
                1) ¿Cuál sería la forma correcta de cargar la data de cada página?, ya q mandarla con un import desde el inicio del server parece una animalada, import dinámico? pero no arruinaría el cache de handlebars?
                    En la entrega la info la levanta la class.

        2) Server.get( '/products', ( req, res ) => {
            res.render('Products', { 'Product': Products } );
        } );
            Leyendo la doc vi q tenia q pasárselo como objeto con una key para q Handlebars sepa q es q, pero siento q hice algo mal, podría revisar en 05__Templates_Engines/.tests/Handlebars-ServerSide/views/Products.handlebars

    Como habilito el Template Caching?
        https://github.com/express-handlebars/express-handlebars#template-caching

        Segun en link de anterior solo tengo q:
            app.enable('view cache');
            process.env.NODE_ENV === "production"

        Lo q no entiendo bien es como setear esa variable de entorno, q cosas implica y si me estoy olvidando de algo más q sea obvio para alguien q sepa del tema. Si tuviera q adivinar lo pondría en index.mjs debajo de : const PORT = 8080 pero se me ocurre q tal vez va en otro lado o q el servidor tenga algun otro archivo dedicado a eso.
+


+ res.render()
    res.render()         Render a view template.

    Esto pasa en el servidor y ya envía la pagina? o el proceso de render se refiere a pasarlo por el engine de Templates para q produzca un html coherente a enviar?
+


+ Navbar y Cambiar el titulo
    No estaba seguro si era correcto colocar en la layout otra variable q no sea body, ya q si lo hago no se si esto hace q lo q pasa debajo como el cache q falle. Hice como sugería el siguiente link:
        https://stackoverflow.com/questions/56212809/change-page-title-in-nodejs

        <title>{{title}}</title>

    Y en cuanto a la Navbar no sabía si lo correcto era ponerla repetida en cada una de las Views.
+


+ Direcciones Absolutas
    en /public/404.html puse:
        <!-- De no usar el path absoluto la página no aplica el CSS en sub directorios -->
        <link href="/css/main.css" type="text/css" rel="stylesheet">

    Me paso en casi todas las direcciones q tuviera q especificar q de no usar un URL absoluta el recurso no era encontrado, no sabía si lo estoy aplicando bien o si tuviera q hacerlo de otra forma o pasarlo como una variable y q Handlebars la cambié.

    El ejemplo de arriba con la 404 es aun más especial q las otras ocurrencias ya q el 404 puede pasar en cualquier subnivel. /cualquier-cosa/o3i426 ; /mas/cual/quiera , etc.

    !) Otra cosa importante q me paso fue q:
        http://localhost:8080/ no es lo mismo q http://localhost:8080/index.html

        Al configurar la ruta raíz use:
            Route_Products.get( '/', ( req, res ) => {

        Pero de alguna forma no tendría q apuntar a index.html o algo así? el tema q cuando estamos armando server side por lo general tenemos un index.mjs y no un index.html. Q tendría q hacer para q este bien para un cliente? o simplemente duplico la ruta o le mando un next usando:
            Route_Products.get( '/index.html', ( req, res ) => {

        Pero lo q intente usando eso y variaciones me fallo.
+


+ HTML Form
    necesito agregar esto en el form? enctype="multipart/form-data"
+










+ Encabezado Entrega
    Sobre EJs, Handlebars backend y PUG frontend.

    Q use put en vez de post para permitir actualizar
+



el como utilizar más layouts y si el formulario de carga no deberia ser una layout distinta


si es posible enviar mas de un res o solo 1 por endpoint?
    Route_Products.get( '/products', ( req, res ) => {
        res.status( 200 ).json( MerchMan.i );
        res.render('Products_List', { 'Products': MerchMan.i } );
    } );

    Agregar al encabezado : q se q estoy mezclando json y render y preguntar como hacerlo correctamente, separando lo q es para servidores o para q otros re usen como /API?



+ Eligiendo un Template Engine
    Me puse a mirar varios proyectos, q está siendo usado, tamaño del npm, etc. y quería saber si ve algún problema o razon para NO usar estos dos:

        - https://markojs.com/

        - https://squirrelly.js.org/

    Entender internamente mercado, como funcionan y la comunidad (cantidad/calidad) q los usa creo q son los criterios q más importan.

    Info Extra:
        https://openbase.com/categories/js/best-nodejs-html-templating-engine-libraries
        https://www.inkoop.io/blog/3-fast-template-engines-for-express-js-squirrelly-marko-swig/
+


Hola voy contestando por partes:

"Si tenés temas personales que te producen ese estado" : por ahi suena patético o cualquier cosa pero en esta entrega creo q el 60% del tiempo se fue en depresión y un problema medico menor q al final por suerte no fue nada.

    URL buscar archivo de disco File URL


sobre typescript
