+ Qué quiere decir 'tienen la preferencia de cargarse primero'
+ Posibles Errores en la Slide 05
+ npm version patch y git commit
+ Especificar ~ ^ * en el comando npm
+ Server Listener vs connectedServer
+ req = Request Body. res = Response Object
+ HTTPS Express Server
+ App vs Server
+ Tipos de res
+ Orden de Server.listen


+ Qué quiere decir 'tienen la preferencia de cargarse primero'
    Slide 05 - NPM
        " Los módulos básicos tienen la preferencia de cargarse primero si su identificador es pasado desde require(). "

    Qué significa e implica lo anterior?
+


+ Posibles Errores en la Slide 05
    " Si instalamos una dependencia en forma global, todos nuestros programas desarrollados en NodeJS contarán con esa librería, y con la versión que haya sido instalada. "
        Esto no es incorrecto? Cuando instalamos de forma global no es q simplemente modificamos nuestro entorno? Por ejemplo no veo q se agregue la dependencia nodemon a todos los paquetes q voy creando. O depende de la librería global?
+


+ npm version patch y git commit
    https://docs.npmjs.com/cli/v8/commands/npm-version
        "
            If run in a git repo, it will also create a version commit and tag. This behavior is controlled by git-tag-version (see below), and can be disabled on the command line by running npm --no-git-tag-version version. It will fail if the working directory is not clean, unless the -f or --force flag is set.

            If supplied with -m or --message config option, npm will use it as a commit message when creating a version commit. If the message config contains %s then that will be replaced with the resulting version number
        "
    No entiendo bien como utilizar lo anterior.

    Quiciera crear un comando q me hace version patch, git add . y git commit en 1 línea, es este correcto:

+


+ Especificar ~ ^ * en el comando npm
    Como se hace para q al instalar una librería se coloquen los símbolos ~ ^ * etc. sin tener q editarlos manualmente del package.json
+


+ Server Listener vs connectedServer
    Leyendo la documentación vi q lo q devuelve Serve.Listen es un "escuchador" (listener) entonces no seria más correcto guardarlo como puse en mi codigo?.
    index.mjs:
        Server.activeListeners = [ Server.listen ]

    Hay alguna razón para como lo pusieron en Coder?

    Slides : " Listen, además, devuelve un objeto que contiene los datos del servidor conectado. "

    Más q los datos del servidor conectado los datos del escuchador creado o no?. El puntero al server es la constante Server no?.
+


+ req = Request Body. res = Response Object
    // req = Request Body
    // res = Response Object

    Es correcto o son otra cosa?
+


+ HTTPS Express Server
    Pedir al profesor q de un ejemplo de como levantar un server HTTPS, y sobre los certificados.

    https://stackoverflow.com/questions/11744975/enabling-https-on-express-js
+


+ App vs Server
    Al usar el modulo HTTP al servidor lo llaman server pero en express le ponen app ... me terminan mareando con la inconsistencia, hay alguna razón? Si vi q en la doc oficial también esta así.
+


+ Tipos de res
    Un lugar q explique claramente los tipos de response, send, render, end, etc.
+


+ Orden de Server.listen
    Hay alguna razon por la cual el profesor coloca:
        app.listen( PORT, ()

    Debajo de todos los:
        app.get

    Afecta en algo? Si no entiendo mal es como si preparase el Server Primero y recien ahi lo 'activa', qué es lo más correcto? Ya q hay cosas como el 'on error' q se especifican LUEGO de tener el listener.
+







Server.use(Express.static("public"));

res.sendFile(__dirname + "/views/index.html");


Quiciera crear un comando q me hace version patch, git add . y git commit en 1 línea, es este correcto:


HTTPS Express Server
