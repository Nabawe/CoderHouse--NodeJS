+ Cada End Point Debería Terminar en return ?
+ Testear Server json cfg
+ Qué significa archivos estáticos?
+ Como reemplazar __dirname
+ Express.static vs Server.get( '/'...
+ Arquitectura de un Proyecto
+ return new Error vs throw
+ ERR__NO_DATA
+ f_productNotFound
+ Destructuring with Arrays Indexes
+ Consigna


+ Cada End Point Debería Terminar en return ?
    Cuando pongo:
        '  res.status( 200 ).send( phrase[pos] ); '

    No debería poner:
        ' return  res.status( 200 ).send( phrase[pos] ); '

    ?

    Esta pregunta me importa bastante por ejemplo se ve en .../routes/products.js pero también me viene la duda si es algo q debería poner en todos los res. q sean finales.
+


+ Testear Server json cfg
    Para que nuestro servidor express pueda interpretar en forma automática mensajes de tipo JSON en formato urlencoded al recibirlos, debemos indicarlo en forma explícita, agregando las siguiente líneas luego de crearlo.

        Server.use(express.json())
        Server.use(express.urlencoded({ extended: true }))

    Aclaración: {extended:true} precisa que el objeto req.body contendrá valores de cualquier tipo en lugar de solo cadenas.
    ¡Sin esta línea, el servidor no sabrá cómo interpretar los objetos recibidos!

    Los significados de estas lineas.
+


+ Qué significa archivos estáticos?
    Entiendo q son el CSS, HTML y demás pero q son exactamente? q propiedades tienen q tener O NO tener para q Express los pueda usar para levantar un servidor Web? Q serian dinámicos?
+


+ Como reemplazar __dirname
    Si no entiendo mal ya no se usa más, cual sería la forma correcta de suplantarlo? Yo me base en este articulo:
        https://blog.logrocket.com/alternatives-dirname-node-js-es-modules/

    Realmente creo q lo hice mal, q tendría q usar algo tipo Path.dirname o alguna otra forma, prove distintas cosas pero termine usando algo parecido a lo q muestran al principio.

    O por casualidad ahora NodeJS lo hace solo?

    Server.get( '/', ( req, res ) => {
        res.sendFile( fileURLToPath( new URL( './public/index.html', import.meta.url ) ) );
    } );

    Todo el siguiente choclo no se si combiene ponerlo en una variable para q no se ejecute cada vez, el problema es q si lo hago no se si pierde la gracia ya q supuestamente es para q se adapte:
    const path_index = fileURLToPath( new URL( './public/index.html', import.meta.url ) );
    Server.get( '/', ( req, res ) => {
        res.sendFile( path_index );
    } );
+


+ Express.static vs Server.get( '/'...
    \04__ReST_API\.tests\08_Tests\Desafio__02\index.mjs

    Cuando coloco:
        Server.use( Express.static( fileURLToPath( new URL( './public', import.meta.url ) ) ) );

    Si luego pongo cualquier cosa en el endpoint:
        Server.get( '/', ( req, res ) => {
            res.sendFile( fileURLToPath( new URL( './public/index.html', import.meta.url ) ) );
        } );

    No parece afectar o cumple alguna función el Server.get? Ya q si no entendi mal la documentación el setear Express.static ya setea ese endpoint.

    https://expressjs.com/en/4x/api.html#express.static
        index
            Sends the specified directory index file. Set to false to disable directory indexing.
            Defaults: “index.html”
+


+ Multer Storage Direction
    No se si la estoy especificando bien o si tengo q usar algo al estilo de:

    fileURLToPath( new URL( './uploads', import.meta.url ) )

    const Storage = Multer.diskStorage( {
    destination: ( req, file, cb ) => {
        cb( null, './uploads' );
    },

    Aparte esto q puse en mis notas es correcto? Creo q me estoy confundiendo con lo de como se le pasa al engine de Storage.
        http://expressjs.com/en/resources/middleware/multer.html

        !!! Cuando se lo pasa por dest parece ser una string y cuando es storage se le manda la configuración del engine elegido.
            Si no entiendo mal si se usa storage y no existe el directorio donde guardar los archivos tira error y no lo crea, pero si se le pasa por dest si lo hace.
+


+ Arquitectura de un Proyecto
    Recomendación de donde ver esto, sobre el orden y organización.
    Aparte si bien me imagino q por lo general esto esta en una base de datos, donde guardaría el json con los productos? y he visto el uso de la carpeta assets pero me suena q es más para imágenes y esas cosas.
+


+ return new Error vs throw
    Esta es otra pregunta importante q quedo acarreada de las entregas anteriores y todabia no me pude poner a revisar q me respondió y q no así q la dejo aquí en caso de q jamás pueda hacerlo:

    El problema q veo es q si uso throw no paralizo todo o parcialmente al servidor? lo q busco es tirar el error pero o yo dejar un método o q el usuario pueda lidiar con el.
+


+ ERR__NO_DATA
    Cuál sería el codigo de error correcto?
    El tipo de res.send correcto? json?

    res.status( 412 ).send( new Error( ERR__NO_DATA ) );
        La línea anterior solo me deja {} en la pantalla del browser.
+


+ f_productNotFound
    si la función retorna un res.send, end, etc. Cómo es el hilo de ejecución? Donde se termina la response, dentro de la función? dentro de la ruta? devuelvo la response y luego el return de la ruta lo termina?
+

+ Destructuring with Arrays Indexes
    Como puedo hacer esto mejor, basándome en :

        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment
            Assigning to new variable names
                const o = {p: 42, q: true};
                const {p: foo, q: bar} = o;

                console.log(foo); // 42
                console.log(bar); // true

        No sería realmente una nueva variable

    ( {
        title: Products[index].title,
        price: Products[index].price,
        thumbnail: Products[index].thumbnail
    } = req.body );
+


+ Consigna
+








import Products from '../data/products.json' assert { type: "json" };
! Este import falla si el archivo esta completamente vacío (ni siquiera []) o si no existe, crashing el server code: 'ERR_MODULE_NOT_FOUND' (para cuando no existe)

undefined:1


SyntaxError: D:\Nabawe\B\Mc\MEGA\Formal\Coder House\Backend - NodeJS\Entregas\04__ReST_API\data\products.json: Unexpected end of JSON input
    at parse (<anonymous>)
    at ESMLoader.jsonStrategy (node:internal/modules/esm/translators:300:21)
    at ESMLoader.moduleProvider (node:internal/modules/esm/loader:337:14)
[nodemon] app crashed - waiting for file changes before starting...
